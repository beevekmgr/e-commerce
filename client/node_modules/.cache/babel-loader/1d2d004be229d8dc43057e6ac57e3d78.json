{"ast":null,"code":"import _objectSpread from \"/home/bee/Coding/coding/React/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/bee/Coding/coding/React/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bee/Coding/coding/React/e-commerce/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formValue = _useState2[0],\n        setFormValue = _useState2[1];\n\n  const displayName = formValue.displayName,\n        email = formValue.email,\n        password = formValue.password,\n        confirmPassword = formValue.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password donot match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    let _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormValue(_objectSpread({}, formValue, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I donot have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign up with you email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userData => dispatch(signUpStart(userData))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/bee/Coding/coding/React/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","formValue","setFormValue","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [formValue, setFormValue] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const { displayName, email, password, confirmPassword } = formValue;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Password donot match\");\n      return;\n    }\n    signUpStart({ email, password, displayName });\n  };\n\n  const handleChange = event => {\n    let { name, value } = event.target;\n    setFormValue({ ...formValue, [name]: value });\n  };\n\n  return (\n    <div className=\"signup\">\n      <h2 className=\"title\">I donot have a account</h2>\n      <span>Sign up with you email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userData => dispatch(signUpStart(userData))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}