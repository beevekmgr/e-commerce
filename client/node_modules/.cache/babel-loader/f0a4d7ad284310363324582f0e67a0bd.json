{"ast":null,"code":"var _jsxFileName = \"/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport CollectionOverviewContainer from \"../../components/collections-overview/colection-overview.container\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsAsync,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsAsync();\n  }, []);\n  console.log(isCollectionsLoaded);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","CollectionOverview","WithSpinner","CollectionPage","fetchCollectionsAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionOverviewContainer","CollectionPageWithSpinner","ShopPage","match","isCollectionsLoaded","console","log","path","props","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAIA,OAAOC,2BAAP,MAAwC,oEAAxC;AAEA,MAAMC,yBAAyB,GAAGN,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASN,EAAAA,qBAAT;AAAgCO,EAAAA;AAAhC,CAAD,KAA2D;AAC1Ed,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEP,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACI,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,yBAAD;AACE,MAAA,SAAS,EAAE,CAACJ;AADd,OAEMI,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAkBD,CAxBD;;AA0BA,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/CiB,EAAAA,oBAAoB,EAAEZ,0BADyB;AAE/CM,EAAAA,mBAAmB,EAAEL;AAF0B,CAAD,CAAhD;;AAKA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,qBAAqB,EAAE,MAAMe,QAAQ,CAACf,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsLoaded\n} from \"../../redux/shop/shop.selector\";\nimport CollectionOverviewContainer from \"../../components/collections-overview/colection-overview.container\";\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, fetchCollectionsAsync, isCollectionsLoaded }) => {\n  useEffect(() => {\n    fetchCollectionsAsync();\n  }, []);\n\n  console.log(isCollectionsLoaded);\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        component={CollectionOverviewContainer}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => (\n          <CollectionPageWithSpinner\n            isLoading={!isCollectionsLoaded}\n            {...props}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}