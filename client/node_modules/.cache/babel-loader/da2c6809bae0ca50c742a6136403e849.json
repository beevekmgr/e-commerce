{"ast":null,"code":"var _jsxFileName = \"/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  isCollectionFetching,\n  fetchCollectionsAsync\n}) => {\n  useEffect(() => {\n    fetchCollectionsAsync();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionOverview","WithSpinner","CollectionPage","fetchCollectionsAsync","createStructuredSelector","selectIsCollectionFetching","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isCollectionFetching","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACD,kBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGN,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,oBAAT;AAA+BP,EAAAA;AAA/B,CAAD,KAA4D;AAC3EN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,6BAAD;AACE,MAAA,SAAS,EAAEF;AADb,OAEME,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEH,KAAK,CAACE,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,yBAAD;AACE,MAAA,SAAS,EAAEF;AADb,OAEME,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAuBD,CA3BD;;AA6BA,MAAMC,eAAe,GAAGT,wBAAwB,CAAC;AAC/CM,EAAAA,oBAAoB,EAAEL;AADyB,CAAD,CAAhD;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,qBAAqB,EAAE,MAAMY,QAAQ,CAACZ,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, isCollectionFetching, fetchCollectionsAsync }) => {\n  useEffect(() => {\n    fetchCollectionsAsync();\n  }, []);\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={props => (\n          <CollectionOverviewWithSpinner\n            isLoading={isCollectionFetching}\n            {...props}\n          />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => (\n          <CollectionPageWithSpinner\n            isLoading={isCollectionFetching}\n            {...props}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}