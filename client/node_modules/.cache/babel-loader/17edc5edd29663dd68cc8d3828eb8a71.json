{"ast":null,"code":"import _slicedToArray from \"/home/bee/Coding/coding/React/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { useState } from \"react\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const unsuscribtFromShanpshot = null;\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      setLoading(false);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/bee/Coding/coding/React/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","CollectionOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","connect","updateCollections","WithSpinner","useState","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","loading","setLoading","unsuscribtFromShanpshot","collectionRef","collection","onSnapshot","snapshot","collectionMap","path","props","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,MAAMC,6BAA6B,GAAGF,WAAW,CAACN,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGH,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASN,EAAAA;AAAT,CAAD,KAAkC;AAAA,oBACnBE,QAAQ,CAAC,IAAD,CADW;AAAA;AAAA,QAC1CK,OAD0C;AAAA,QACjCC,UADiC;;AAEjD,QAAMC,uBAAuB,GAAG,IAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGhB,8BAA8B,CAACe,QAAD,CAApD;AACAb,MAAAA,iBAAiB,CAACc,aAAD,CAAjB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACS,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAET;AAA1C,OAAuDS,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAET;AAAtC,OAAmDS,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CA9BD;;AAgCA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAEc,aAAa,IAAII,QAAQ,CAAClB,iBAAiB,CAACc,aAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAef,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { useState } from \"react\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, updateCollections }) => {\n  const [loading, setLoading] = useState(true);\n  const unsuscribtFromShanpshot = null;\n\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={props => (\n          <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => (\n          <CollectionPageWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}